from loader import dp 
from keyboards.start_buttons import starty
from aiogram import types
import logging
from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery
from keyboards.back_button import backbtn
from utils.db_api import quick_commands as commands
from sqlalchemy import false
from aiogram.dispatcher import FSMContext


@dp.message_handler(commands=['my'])
async def my(message: types.Message):
    user_id = message.from_user.id
    user = await commands.select_user(user_id=user_id)
    if user == user:
        await message.answer(f' –°—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ \nüë§ –ù—ñ–∫: {user.first_name} \nId: {user.user_id} \n–û—Å–æ–±–∏—Å—Ç–∏–π –±–∞–ª–∞–Ω—Å : {user.balance}')
    else:
        await message.answer('–¢–∞–∫–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –≤ –ë–î', reply_markup=backbtn)


@dp.message_handler(commands=['menu', 'start'])
async def command_menu(message: types.Message):
    user_id=message.from_user.id
    await message.answer_video('https://telegra.ph/file/81fea9a2c1d8c4854f268.mp4')
    await message.answer(f'Buenos d√≠as {message.from_user.full_name}! \n\n–†–∞–¥—ñ –≤–∞—Å –≤—ñ—Ç–∞—Ç–∏ –≤ Botas de Guerrera!',
                                    reply_markup= starty )
    await commands.add_user(user_id=message.from_user.id,
                            first_name=message.from_user.first_name,
                            last_name=message.from_user.first_name,
                            username=message.from_user.username,
                            status='active',
                            balance=0,
                            admin=0)


@dp.callback_query_handler(text_contains="inform")
async def cally(call: CallbackQuery):
    await call.message.delete_reply_markup()
    await call.message.edit_text(f'Buenos d√≠as {call.from_user.full_name}! \n\n–†–∞–¥—ñ –≤–∞—Å –≤—ñ—Ç–∞—Ç–∏ –≤ Botas de Guerrera!',
                                    reply_markup= starty )


@dp.callback_query_handler(text_contains="about")
async def cally(call: CallbackQuery):
    await call.message.edit_text(text=f"\n{'<b>'}Guerrera - –∑ —ñ—Å–ø–∞–Ω—Å—å–∫–æ—ó –ø–µ—Ä–µ–∫–ª–∞–¥–∞—î—Ç—å—Å—è —è–∫ –í–æ—ó–Ω, —á–∏—Ç. [“ê–µ—Ä—Ä–µ—Ä–∞] {'</b>'}"
                                    "\n\n–ß–∞—Ç –±—É–≤ –∑–∞—Å–Ω–æ–≤–∞–Ω–∏–π 8 –ª–∏—Å—Ç–æ–ø–∞–¥–∞ 2021 —Ä.", parse_mode = 'HTML',
                                     reply_markup= starty)


@dp.callback_query_handler(text_contains="rules")
async def cally (call: CallbackQuery):
    await call.message.edit_text('–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏ –≤ —á–∞—Ç—ñ\n\nhttps://teletype.in/@pprovokatorr/MGrules' ,
                                reply_markup= backbtn)


@dp.callback_query_handler(text_contains="rearward")
async def cally (call: CallbackQuery):
    await call.message.edit_text('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ —á–∞—Ç - https://t.me/+wDiS3QYPR5k4N2I6',
                                 reply_markup= backbtn)


@dp.callback_query_handler(text_contains="help")
async def cally (call: CallbackQuery):
    await call.message.edit_text(text='–Ø–∫—â–æ –≤–∞–º –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è –Ω–∞—à —á–∞—Ç —ñ –≤–∏ –±–∞–∂–∞—î—Ç–µ —â–æ–± –≤—ñ–Ω —Ä–æ–∑–≤–∏–≤–∞–≤—Å—è –¥–∞–ª—ñ.\n\n–í–∏ –º–æ–∂–µ—Ç–µ –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞—Å –Ω–µ–≤–µ–ª–∏–∫–∏–º –¥–æ–Ω–∞—Ç–æ–ºüî•\n\nhttps://send.monobank.ua/jar/AP3PZNUsKA',
                                reply_markup= backbtn)

